// TODO: the Discover Kubernetes pods to collect metrics from.
// "\<-\=\(0\|[1-9]_\?\(\d\|\d\+_\?\d\+\)*\)\%([Ee][-+]\=\d\+\)\=\>"
discovery.kubernetes "pods" {
	role = "pod"
}

// Scrape metrics from Kubernetes pods and send to a prometheus.remote_write
// component.
prometheus.FIXME.test "default" {
	targets    = discovery.kubernetes.pods.targets
	forward_to = [prometheus.remote_write.default.receiver]
}

// Get an API key from disk.
local.file "apikey" {
	filename  = "/var/data/my-api-key.txt"
	is_secret = true
}

// Collect and send metrics to a Prometheus remote_write endpoint.
prometheus.remote_write "default" {
	endpoint {
		url = "http://localhost:9009/api/prom/push"

		http_client_config {
			basic_auth {
				username = "MY_USERNAME"
				password = local.file.apikey.content
			}
		}
	}
}

float "example" {
	zero                               = 0.
	decimal                            = 72.40
	leading_zero                       = 072.40 // == 72.40
	exponent                           = 1.e+0
	negative_exponent                  = 6.67428e-11
	capital_exponent                   = 1E6
	missing_leading_zero               = .25
	missing_leading_zero_with_exponent = .12345E+5
	// I believe the trailing decimal point is breaking parsing.
	// To check: agent --version && EXPERIMENTAL_ENABLE_FLOW=1 agent fmt - <<<"missing_trailing_zero = 1_5."
	// missing_trailing_zero = 1_5.  // == 15.0
	// Not yet sure why this doesn't parse.
	// To check: agent --version && EXPERIMENTAL_ENABLE_FLOW=1 agent fmt - <<<"decimal_exponent = 0.15e+0_2"
	// decimal_exponent = 0.15e+0_2  // == 15.0

	// hex_float = 0x1p-2       // == 0.25
	// hex_float = 0x2.p10      // == 2048.0
	// zero_exp = 0x1.Fp+0     // == 1.9375
	// negative_zero_exp = 0X.8p-0      // == 0.5
	// with_underscores = 0X_1FFFP-16  // == 0.1249847412109375
	// integer_subtraction = 0x15e-2      // == 0x15e - 2
}

integer "example" {
	zero = 0
	one  = 1
	ten  = 10

	// Binary integers are not yet supported by the River parser.
	// To check: agent --version && EXPERIMENTAL_ENABLE_FLOW=1 agent fmt - <<<"bin = 0b1"
	// bin = 0b1
	// Hexadecimal integers are not yet supported by the River parser.
	// To check: agent --version && EXPERIMENTAL_ENABLE_FLOW=1 agent fmt - <<<"hex = 0x01ef"
	// hex = 0x01ef
	oct = 0777

	// Leading positive sign is not yet supported by the River parser but is valid according
	// to strconv.ParseInt.
	// To check: agent --version && EXPERIMENTAL_ENABLE_FLOW=1 agent fmt - <<<"positive = +100"
	// positive = +100
	negative = -100

	// Underscores for readability are not yet supported by the River parser.
	// To check: agent --version && EXPERIMENTAL_ENABLE_FLOW=1 agent fmt - <<<"underscored = 1_000_000"
	// million = 1_000_000

	preceding_underscore = _1_00 // Is an identifier not an integer
}
